name: push

on:
  workflow_dispatch:
  #push:
   # branches:
    #  - 'main'

env:
  DEV: false # true|false
  
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get package version
        run: |
          export url=http://downloads.3cx.com/downloads/debian/dists/buster/main/binary-amd64/Packages.gz
          export package=3cxpbx
          echo package_version=$(curl -s $url | gunzip | grep -A 10 "^Package: $package$" | awk '/Version: / { print $2 }' | sort -r | head -1) >> $GITHUB_ENV
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          config: buildkitd.toml
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/izer-xyz/3cx:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Test image
        timeout-minutes: 1
        run: |
          docker run --rm --env MODE=test --tmpfs /tmp --tmpfs /run --tmpfs /run/lock -v /sys/fs/cgroup:/sys/fs/cgroup:ro ghcr.io/izer-xyz/3cx:test
      -
        name: Build and push
        if: ${{ ! env.DEV }}
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64, linux/arm
          push: true
          build-args: |
            PACKAGE_VERSION=${{ env.package_version }}
          tags: |
            ghcr.io/izer-xyz/3cx:${{ env.package_version }}-${{ github.run_number }}
            ghcr.io/izer-xyz/3cx:${{ env.package_version }}
            ghcr.io/izer-xyz/3cx:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/3cx:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/3cx:${{ env.package_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/3cx:${{ env.package_version }}-${{ github.run_number }}

      -
        name: Create Release
        if: ${{ ! env.DEV }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.package_version }}-${{ github.run_number }}
          release_name: Release v${{ env.package_version }}-${{ github.run_number }}
          body: |
            3CX v${{ env.package_version }} docker image:
            > docker run izerxyz/3cx:${{ env.package_version }}
            
            Changelog: 
              - https://www.3cx.com/blog/change-log/phone-system-change-log/
